
OpenTofu used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

OpenTofu will perform the following actions:

[1m  # yandex_compute_instance.ubu2404t[0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "ubu2404t" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hostname                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
          [32m+[0m[0m "user-data"          = <<-EOT
                #cloud-config
                groups:
                  - admingroup: [root, sudo, adm, admin]
                  - cloud-users, www-data
                users:
                  - default
                  - name: ophil
                    groups: adm, sudo, www-data, systemd-journal, users, admin
                    expiredate: '2032-09-01'
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL']
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOoYBWDhockOhoBOJQmq0YCfIb37jC8lorvOqca3iAVB
                  - name: dev
                    groups: systemd-journal, docker
                    expiredate: '2032-09-01'
                    shell: /bin/bash
                    ssh_authorized_keys:
                      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOoYBWDhockOhoBOJQmq0YCfIb37jC8lorvOqca3iAVB
                runcmd:
                  - apt update
                  - apt upgrade -y
                packages:
                  - docker.io
                  - docker-buildx
                  - docker-compose-v2
                  - fail2ban
                  - dlocate
                  - python3-pip
                  - tree
                  - podman
                  - podman-compose
                  - podman-docker
            EOT
        }
      [32m+[0m[0m name                      = "ubu2404t"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-b"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = "fd84b1mojb8650b9luqd"
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = (known after apply)
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index              = (known after apply)
          [32m+[0m[0m ip_address         = (known after apply)
          [32m+[0m[0m ipv4               = true
          [32m+[0m[0m ipv6               = (known after apply)
          [32m+[0m[0m ipv6_address       = (known after apply)
          [32m+[0m[0m mac_address        = (known after apply)
          [32m+[0m[0m nat                = true
          [32m+[0m[0m nat_ip_address     = (known after apply)
          [32m+[0m[0m nat_ip_version     = (known after apply)
          [32m+[0m[0m security_group_ids = (known after apply)
          [32m+[0m[0m subnet_id          = "e2lij6cpfo7pl5rtvc01"
        }

      [32m+[0m[0m placement_policy (known after apply)

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 20
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 4
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m external_ip_address_ubu2404t = (known after apply)
  [32m+[0m[0m internal_ip_address_ubu2404t = (known after apply)
[0m[1m
Do you want to perform these actions?[0m
  OpenTofu will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
[0m[1myandex_compute_instance.ubu2404t: Creating...[0m[0m
[0m[1myandex_compute_instance.ubu2404t: Still creating... [10s elapsed][0m[0m
[0m[1myandex_compute_instance.ubu2404t: Still creating... [20s elapsed][0m[0m
[0m[1myandex_compute_instance.ubu2404t: Still creating... [30s elapsed][0m[0m
[0m[1myandex_compute_instance.ubu2404t: Creation complete after 35s [id=epd00nc75ub7tbttunh0][0m
[0m[1m[32m
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mexternal_ip_address_ubu2404t = "84.201.177.111"
internal_ip_address_ubu2404t = "10.129.0.11"
